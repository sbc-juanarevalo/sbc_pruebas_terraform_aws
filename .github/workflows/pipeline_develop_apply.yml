name: Develop Apply
on:
  pull_request:
    branches: [develop]
    types: [closed]

jobs:
  Apply:
    name: "Apply"
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-20.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOP_ORBIKA }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOP_ORBIKA }}
      #VAR: $(cat config.yaml)
      VAR: '"E1DNJ6PRKN7113"'
    defaults:
      run:        
        #working-directory: src
        working-directory: config   
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      #- name: Setup Terraform
      #  uses: hashicorp/setup-terraform@v1
      #  with:
      #    terraform_version: 1.0.1
      #    terraform_wrapper: false

      #- name: Terraform Format
      #  id: fmt
      #  run: terraform fmt      

      #- name: Terraform Format check
      #  id: check
      #  run: terraform fmt -check

      #- name: Terraform Init
      #  id: init
      #  run: terraform init '-var=branch_name=dev' #'-backend-config=bucket=sbc-pruebas-terraform-aws'

      #- name: Terraform plan
      #  id: plan
      #  run: terraform plan -var="branch_name=dev"

      #- name: Terraform apply
      #  run: terraform apply -var="branch_name=dev" -auto-approve

      #- name: uploadconfig
      #  run: TEST_VAR='Hello World!
      
      - name: "Say Hello Mona it's Monday"
        run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"
        env:
          First_Name: Mona
          Greeting: Hola
          DAY_OF_WEEK: Monday
        
      
      - name: verRuta
        run: ls

      - name: verArchivo
        run: cat config.yaml

      - name: loadconfig
        run: |
            echo 1 $VAR
            echo 2 "$VAR"
            echo 3 '$VAR'
            echo 4 '"$VAR"'
            echo 5 VAR
            #echo "'$VAR'""
      
     

      - name: VerVariable
        run: echo "$Greeting $First_Name. Today is $DAY_OF_WEEK!"

   

      #- name: Set variables 1
      #  run: |
      #    env VAR=$(cat config.yaml)
      #    echo "$VAR"

     
      #- uses: actions/checkout@v3
      - uses: aws-actions/setup-sam@v2
        with:
          use-installer: true
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOP_ORBIKA }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOP_ORBIKA }}
          aws-region: "Global"
      # Build inside Docker containers
      - run: cloudfront create-invalidation --distribution-id "E1DNJ6PRKN7113" --paths "/index.html"
      

          

      #- name: VerVariable        
      #  run: echo "$AWS_ACCESS_KEY_ID, $AWS_DEFAULT_REGION, $DistributionID, ${{ env.DistributionID }}, $VAR"
      #  env:
      #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOP_ORBIKA }}
      #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOP_ORBIKA }}
      #    AWS_DEFAULT_REGION: "Global"
      #    DistributionID: '"E1DNJ6PRKN7113"'
      

      #- name: AWS CLI v2              
      #  uses: imehedi/actions-awscli-v2@latest
      #  with:          
      #    args: cloudfront create-invalidation --distribution-id $VAR --paths "/index.html"
      #  env:
      #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEVELOP_ORBIKA }}
      #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOP_ORBIKA }}
      #    AWS_DEFAULT_REGION: "Global"
          #VAR: '"cat config.yaml"'
          #DistributionID: '"E1DNJ6PRKN7113"'
          #DistributionID: "E1DNJ6PRKN7113"
          #DistributionID: 'E1DNJ6PRKN7113'
          #DistributionID: E1DNJ6PRKN7113
          #DistributionID: "'E1DNJ6PRKN7113'"

      
          

      